{"version":3,"sources":["components/Registration/Login.jsx","components/Registration/Logout.jsx","components/Registration/Register.jsx","components/Registration/Home.jsx","components/OpenGlobalChat.jsx","components/GlobalChat.jsx","components/MyRequests.jsx","components/OpenConversation.jsx","components/PrivateChat.jsx","components/Chatroom.jsx","components/Registration/Error404.jsx","components/App.jsx","index.js"],"names":["Login","props","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","showIcon","setShowIcon","className","id","src","alt","onSubmit","event","preventDefault","userLoginData","axios","post","then","response","data","verificationError","fieldEmptyError","loginVerified","getResponseFromLogin","currentWorkingUser","userActive","catch","err","console","log","setTimeout","window","location","reload","htmlFor","type","name","autoComplete","onChange","target","value","required","onClick","$","attr","to","Logout","href","Register","userName","passWord","confirmPassword","setConfirmPassword","showIconPassword","setShowIconPassword","showIconConfirmPassword","setShowIconConfirmPassword","userData","confirmPassWord","usernameError","passwordError","passwordLengthError","usernameLengthError","registrationVerified","getResponseFromRegister","placeholder","maxLength","minLength","Home","OpenGlobalChat","message","sentBy","currentUser","body","GlobalChat","globalMessages","setGlobalMessages","globalMessage","setGlobalMessage","sock","setSock","open","setOpen","count","setCount","setPhoneShowChat","getChats","a","get","messages","openGlobalChat","handleShow","emit","socket","socketIOClient","on","msg","prevMessages","sendGlobalMessage","handleGlobalChange","useEffect","show","style","marginBottom","map","index","marginLeft","fontSize","MyRequests","request","float","friend","nowFriend","addFriend","requestF","rejectFriend","OpenConversation","PrivateChat","showModal","setShowModal","showAfterRequest","setShowAfterRequest","usernameContact","setUsernameContact","friends","setFriends","requestsPending","setRequestsPending","chatWithFriend","setChatWithFriend","yourID","setyourID","room","setRoom","setMessage","messagesFromRoom","setMessagesFromRoom","friendRequest","setFriendRequest","getMessages","roomName","getRequests","recievedRequests","getFriends","handleShowModal","handleHideModal","handleHideModalAfterRequest","openChat","split","unique","Set","sort","b","whichFriendToChat","sendMessage","messageObject","roomID","handleChange","length","Modal","onHide","Body","cursor","find","userContact","requestError","requestSuccess","size","Chatroom","activeKey","setActiveKey","setShow","Tab","Container","onSelect","Nav","variant","borderBottom","backgroundColor","Item","Link","border","color","eventKey","Content","Pane","Error404","App","auth","setAuth","setCurrentUser","pathname","authorizedMessage","unauthorizedMessage","exact","path","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a507d704.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { React, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport VisibilityOffSharpIcon from \"@material-ui/icons/VisibilityOffSharp\";\r\nimport VisibilitySharpIcon from \"@material-ui/icons/VisibilitySharp\";\r\n\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [showIcon, setShowIcon] = useState(false);\r\n\r\n  function handleChangeLoginUsername(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  function handleChangeLoginPassword(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleShowIconOn() {\r\n    setShowIcon(false);\r\n    window.$(\"#loginInputPassword\").attr(\"type\", \"password\");\r\n  }\r\n\r\n  function handleShowIconOff() {\r\n    setShowIcon(true);\r\n    window.$(\"#loginInputPassword\").attr(\"type\", \"text\");\r\n  }\r\n\r\n  function handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n    const userLoginData = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n    axios\r\n      .post(\"/login\", { userLoginData })\r\n      .then((response) => {\r\n        if (response.data.verificationError) {\r\n          setErrorMessage(response.data.verificationError);\r\n        }\r\n        if (response.data.fieldEmptyError) {\r\n          setErrorMessage(response.data.fieldEmptyError);\r\n        }\r\n        if (response.data.loginVerified) {\r\n          props.getResponseFromLogin(response.data.loginVerified);\r\n          props.currentWorkingUser(response.data.userActive);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTimeout(function () {\r\n      window.location.reload();\r\n    }, 1550);\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <div className=\"container\">\r\n        <div className=\"row\" id=\"loginUpperRow\">\r\n          <img\r\n            className=\"loginImage\"\r\n            src=\"../images/chat.jpg\"\r\n            alt=\"symbolChat\"\r\n          />\r\n          <h1 className=\"loginHeading\">Login</h1>\r\n        </div>\r\n      </div>\r\n      {errorMessage ? (\r\n        <div className=\"errorMessageContainer\">\r\n          <p className=\"errorMessageDescription\">{errorMessage}</p>\r\n        </div>\r\n      ) : null}\r\n      <form onSubmit={handleLoginSubmit}>\r\n        <div className=\"form-group loginInputContainer\">\r\n          <label className=\"loginLabels\" htmlFor=\"username\">\r\n            Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"loginInputUsername\"\r\n            name=\"username\"\r\n            autoComplete=\"off\"\r\n            onChange={handleChangeLoginUsername}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group loginInputContainer\">\r\n          <label className=\"loginLabels\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              id=\"loginInputPassword\"\r\n              onChange={handleChangeLoginPassword}\r\n              required\r\n            />\r\n            {showIcon ? (\r\n              <VisibilitySharpIcon\r\n                onClick={handleShowIconOn}\r\n                className=\"loginVisibleIcon\"\r\n              />\r\n            ) : (\r\n              <VisibilityOffSharpIcon\r\n                onClick={handleShowIconOff}\r\n                className=\"loginVisibleIcon\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <button className=\"loginButtons\" type=\"submit\">\r\n          Login\r\n        </button>\r\n        <hr className=\"loginLine\" />\r\n        <p className=\"loginRegisterLine\">Don't have an Account ?</p>\r\n        <Link className=\"loginRegisterButton\" to=\"/register\">\r\n          Register\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Logout() {\r\n  return (\r\n    <div>\r\n      <h1>You have successfully logged out</h1>\r\n      <a href=\"/\">Go to home</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport VisibilityOffSharpIcon from \"@material-ui/icons/VisibilityOffSharp\";\r\nimport VisibilitySharpIcon from \"@material-ui/icons/VisibilitySharp\";\r\n\r\nfunction Register(props) {\r\n  const [userName, setUsername] = useState();\r\n  const [passWord, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [showIconPassword, setShowIconPassword] = useState(false);\r\n  const [showIconConfirmPassword, setShowIconConfirmPassword] = useState(false);\r\n\r\n  function handleChangeUsername(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  function handleChangePassword(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleChangeConfirmPassword(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  function handleShowIconOnPassword() {\r\n    setShowIconPassword(false);\r\n    window.$(\"#registerInputPassword\").attr(\"type\", \"password\");\r\n  }\r\n\r\n  function handleShowIconOffPassword() {\r\n    setShowIconPassword(true);\r\n    window.$(\"#registerInputPassword\").attr(\"type\", \"text\");\r\n  }\r\n\r\n  function handleShowIconOnConfirmPassword() {\r\n    setShowIconConfirmPassword(false);\r\n    window.$(\"#registerInputConfirmPassword\").attr(\"type\", \"password\");\r\n  }\r\n\r\n  function handleShowIconOffConfirmPassword() {\r\n    setShowIconConfirmPassword(true);\r\n    window.$(\"#registerInputConfirmPassword\").attr(\"type\", \"text\");\r\n  }\r\n\r\n  function handleRegister(event) {\r\n    event.preventDefault();\r\n    const userData = {\r\n      username: userName,\r\n      password: passWord,\r\n      confirmPassWord: confirmPassword,\r\n    };\r\n    axios\r\n      .post(\"/register\", { userData })\r\n      .then((response) => {\r\n        if (response.data.fieldEmptyError) {\r\n          setErrorMessage(response.data.fieldEmptyError);\r\n        }\r\n        if (response.data.usernameError) {\r\n          console.log(\"error\");\r\n          setErrorMessage(response.data.usernameError);\r\n        }\r\n        if (response.data.passwordError) {\r\n          setErrorMessage(response.data.passwordError);\r\n        }\r\n        if (response.data.passwordLengthError) {\r\n          setErrorMessage(response.data.passwordLengthError);\r\n        }\r\n        if (response.data.usernameLengthError) {\r\n          setErrorMessage(response.data.usernameLengthError);\r\n        }\r\n        if (response.data.registrationVerified) {\r\n          props.getResponseFromRegister(response.data.registrationVerified);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTimeout(function () {\r\n      window.location.reload();\r\n    }, 1550);\r\n  }\r\n\r\n  return (\r\n    <div className=\"registerContainer\">\r\n      <div className=\"container\">\r\n        <div className=\"row\" id=\"registerUpperRow\">\r\n          <img\r\n            className=\"registerImage\"\r\n            src=\"../images/chat.jpg\"\r\n            alt=\"symbolChat\"\r\n          />\r\n          <h1 className=\"registerHeading\">Register</h1>\r\n        </div>\r\n      </div>\r\n      {errorMessage ? (\r\n        <div className=\"errorMessageContainer\">\r\n          <p className=\"errorMessageDescription\">{errorMessage}</p>\r\n        </div>\r\n      ) : null}\r\n\r\n      <form onSubmit={handleRegister}>\r\n        <div className=\"form-group registerInputContainer\">\r\n          <label htmlFor=\"username\" className=\"registerLabels\">\r\n            Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            id=\"registerInputUsername\"\r\n            placeholder=\"For ex: Jim\"\r\n            maxLength=\"25\"\r\n            autoComplete=\"off\"\r\n            onChange={handleChangeUsername}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group registerInputContainer\">\r\n          <label htmlFor=\"password\" className=\"registerLabels\">\r\n            Password\r\n          </label>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              minLength=\"8\"\r\n              autoComplete=\"off\"\r\n              id=\"registerInputPassword\"\r\n              onChange={handleChangePassword}\r\n              required\r\n            />\r\n            {showIconPassword ? (\r\n              <VisibilitySharpIcon\r\n                onClick={handleShowIconOnPassword}\r\n                className=\"loginVisibleIcon\"\r\n              />\r\n            ) : (\r\n              <VisibilityOffSharpIcon\r\n                onClick={handleShowIconOffPassword}\r\n                className=\"loginVisibleIcon\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group registerInputContainer\">\r\n          <label htmlFor=\"confirmPassword\" className=\"registerLabels\">\r\n            Confirm Password\r\n          </label>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              minLength=\"8\"\r\n              className=\"form-control\"\r\n              name=\"confirmPassword\"\r\n              autoComplete=\"off\"\r\n              id=\"registerInputConfirmPassword\"\r\n              onChange={handleChangeConfirmPassword}\r\n              required\r\n            />\r\n            {showIconConfirmPassword ? (\r\n              <VisibilitySharpIcon\r\n                onClick={handleShowIconOnConfirmPassword}\r\n                className=\"loginVisibleIcon\"\r\n              />\r\n            ) : (\r\n              <VisibilityOffSharpIcon\r\n                onClick={handleShowIconOffConfirmPassword}\r\n                className=\"loginVisibleIcon\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <button className=\"registerButton\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"homeBody\">\r\n      <div className=\"homeContainer\">\r\n        <img className=\"homeImage\" src=\"../images/chat.jpg\" alt=\"symbolChat\" />\r\n        <h1 className=\"homeHeading\">Welcome To WhatsUp</h1>\r\n        <div className=\"homeDescriptionContainer\">\r\n          <p className=\"homeDescription\">\r\n            Come and chat with your friends or chat globally with everyone in\r\n            real time.\r\n          </p>\r\n        </div>\r\n        <Link className=\"homeButtons\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n        <Link className=\"homeButtons\" to=\"/register\">\r\n          Register\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction OpenGlobalChat(props) {\r\n  return (\r\n    <div>\r\n      {props.message.sentBy === props.currentUser ? (\r\n        <div>\r\n          <div className=\"phoneGlobalChatTextSentContainer\">\r\n            <p className=\"phoneGlobalChatText\">{props.message.body}</p>\r\n            <div className=\"arrowSent\"></div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"phoneGlobalChatTextRecievedContainer\">\r\n          <div className=\"arrowRecieved\"></div>\r\n          <p className=\"phoneGlobalChatTextReceivedFrom\">\r\n            {props.message.sentBy}\r\n          </p>\r\n          <p className=\"phoneGlobalChatText\">{props.message.body}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OpenGlobalChat;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport OpenGlobalChat from \"./OpenGlobalChat\";\r\nimport axios from \"axios\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nconst ENDPOINT = \"http://localhost:3000\";\r\n\r\nfunction GlobalChat(props) {\r\n  const [globalMessages, setGlobalMessages] = useState([]);\r\n  const [globalMessage, setGlobalMessage] = useState({\r\n    body: \"\",\r\n    sentBy: \"\",\r\n  });\r\n  const [sock, setSock] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n  const [phoneShowChat, setPhoneShowChat] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getChats();\r\n  }, [count]);\r\n\r\n  async function getChats() {\r\n    await axios\r\n      .get(\"/globalChats\")\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setGlobalMessages(response.data.messages);\r\n        } else {\r\n          setGlobalMessages([]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  if (sock && props.show === false) {\r\n    sock.emit(\"forceDisconnect\");\r\n  }\r\n\r\n  function openGlobalChat() {\r\n    setCount(count + 1);\r\n    setOpen(true);\r\n    setPhoneShowChat(false);\r\n    props.handleShow();\r\n    if (sock) {\r\n      sock.emit(\"forceDisconnect\");\r\n    }\r\n    axios\r\n      .get(\"/globalChats\")\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setGlobalMessages(response.data.messages);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    const socket = socketIOClient(ENDPOINT);\r\n    setSock(socket);\r\n    socket.emit(\"globalChat\");\r\n    socket.on(\"getGlobalMessage\", (msg) => {\r\n      setGlobalMessages((prevMessages) => {\r\n        return [...prevMessages, msg];\r\n      });\r\n      getChats();\r\n    });\r\n  }\r\n\r\n  function sendGlobalMessage(event) {\r\n    event.preventDefault();\r\n    sock.emit(\"emitGlobalMessage\", globalMessage);\r\n    setGlobalMessages((prevMessages) => {\r\n      return [...prevMessages, globalMessage];\r\n    });\r\n    axios\r\n      .post(\"/globalChats\", { globalMessage })\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setGlobalMessage({\r\n      body: \"\",\r\n      sentBy: \"\",\r\n    });\r\n  }\r\n\r\n  function handleGlobalChange(event) {\r\n    setGlobalMessage({\r\n      body: event.target.value,\r\n      sentBy: props.currentUser,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid laptopSize\">\r\n        <div className=\"row\" id=\"globalChatContainer\">\r\n          <div className=\"sideBoxGlobalChat\">\r\n            <div>\r\n              <p className=\"globalChatSideBoxDescription\">\r\n                With this Global Chat you can chat with people all across the\r\n                world... So what are you waiting for ??\r\n                <br />\r\n                <button\r\n                  onClick={openGlobalChat}\r\n                  className=\"globalChatOpenButton\"\r\n                >\r\n                  Go to Global Chat\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"globalMainChat\" id={!open ? \"emptyGlobalChat\" : \"\"}>\r\n            {open && props.show ? (\r\n              <div className=\"globalChatExtra\">\r\n                <div\r\n                  className=\"globalMainChatHeading\"\r\n                  style={{ marginBottom: \"0rem\" }}\r\n                >\r\n                  <p className=\"globalMainChatHeadingLine\">Global Chat</p>\r\n                </div>\r\n                <div className=\"globalChatMessages\">\r\n                  {globalMessages.map((message, index) => {\r\n                    return (\r\n                      <OpenGlobalChat\r\n                        key={index}\r\n                        message={message}\r\n                        currentUser={props.currentUser}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div className=\"globalChatSendMesage\">\r\n                  <form onSubmit={sendGlobalMessage}>\r\n                    <div className=\"globalChatButtonFlex\">\r\n                      <div className=\"globalChatTextareaContainer\">\r\n                        <input\r\n                          value={globalMessage.body}\r\n                          onChange={handleGlobalChange}\r\n                          placeholder=\"Type a Message\"\r\n                          className=\"globalChatTextarea\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"globalChatSendButtonContainer\">\r\n                        <button className=\"globalChatSendButton\">\r\n                          <p className=\"globalChatSendButtonText\">\r\n                            Send\r\n                            <SendRoundedIcon style={{ marginLeft: \"6px\" }} />\r\n                          </p>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* For Mobile */}\r\n\r\n      <div className=\"phoneSize\">\r\n        {!open || !props.show ? (\r\n          <div className=\"phoneGlobalChatBoxContainer\">\r\n            <p className=\"phoneGlobalChatBoxDescription\">\r\n              With this Global Chat you can chat with people all across the\r\n              world... So what are you waiting for ??\r\n              <br />\r\n              <button\r\n                onClick={openGlobalChat}\r\n                className=\"phoneGlobalChatBoxButton\"\r\n              >\r\n                Go to Global Chat\r\n              </button>\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"globalMainChat phoneChatGlobal\">\r\n            <div className=\"phoneGlobalChatExtra\">\r\n              <div className=\"phoneGlobalChatMessages\">\r\n                {globalMessages.map((message, index) => {\r\n                  return (\r\n                    <OpenGlobalChat\r\n                      key={index}\r\n                      message={message}\r\n                      currentUser={props.currentUser}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"phoneGlobalChatSendMesage\">\r\n                <form onSubmit={sendGlobalMessage}>\r\n                  <div className=\"phoneGlobalChatButtonFlex\">\r\n                    <div className=\"phoneGlobalChatTextareaContainer\">\r\n                      <input\r\n                        value={globalMessage.body}\r\n                        onChange={handleGlobalChange}\r\n                        placeholder=\"Type a Message\"\r\n                        className=\"phoneGlobalChatTextarea\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"phoneGlobalChatSendButtonContainer\">\r\n                      <button className=\"phoneGlobalChatSendButton\">\r\n                        <p className=\"phoneGlobalChatSendButtonText\">\r\n                          <SendRoundedIcon\r\n                            style={{\r\n                              fontSize: \"2rem\",\r\n                            }}\r\n                          />\r\n                        </p>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            {/* ) : null} */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GlobalChat;\r\n","import React from \"react\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport axios from \"axios\";\r\n\r\nfunction MyRequests(props) {\r\n  function addFriend(request) {\r\n    const friend = {\r\n      nowFriend: request,\r\n    };\r\n    axios\r\n      .post(\"/addFriend\", { friend })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTimeout(function () {\r\n      window.location.reload();\r\n    }, 500);\r\n  }\r\n\r\n  function rejectFriend(request) {\r\n    const friend = {\r\n      requestF: request,\r\n    };\r\n    axios\r\n      .post(\"/rejectFriend\", { friend })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTimeout(function () {\r\n      window.location.reload();\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"privateChatRequestsPendingName\">{props.request}</p>\r\n      <div style={{ float: \"right\" }}>\r\n        <DoneIcon\r\n          onClick={() => {\r\n            addFriend(props.request);\r\n          }}\r\n          id=\"privateChatRequestAccept\"\r\n        />\r\n        <ClearIcon\r\n          onClick={() => {\r\n            rejectFriend(props.request);\r\n          }}\r\n          id=\"privateChatRequestReject\"\r\n        />\r\n      </div>\r\n      <hr className=\"privateChatRequestsPendingHR\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyRequests;\r\n","import React from \"react\";\r\n\r\nfunction OpenConversation(props) {\r\n  return (\r\n    <div>\r\n      {props.message.sentBy !== props.friend ? (\r\n        <div>\r\n          <div className=\"phoneGlobalChatTextSentContainer\">\r\n            <p className=\"phoneGlobalChatText\">{props.message.body}</p>\r\n            <div className=\"arrowSent\"></div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"phoneGlobalChatTextRecievedContainer\">\r\n          <div className=\"arrowRecieved\"></div>\r\n          <p className=\"phoneGlobalChatText\">{props.message.body}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default OpenConversation;\r\n","import { React, useState, useEffect, useRef } from \"react\";\r\nimport { Modal, Button, Col, Row } from \"react-bootstrap\";\r\nimport MyRequests from \"./MyRequests\";\r\nimport OpenConversation from \"./OpenConversation\";\r\nimport axios from \"axios\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nconst ENDPOINT = \"http://localhost:3000\";\r\n\r\nfunction PrivateChat(props) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showAfterRequest, setShowAfterRequest] = useState(false);\r\n  const [usernameContact, setUsernameContact] = useState();\r\n  const [friends, setFriends] = useState([]);\r\n  const [requestsPending, setRequestsPending] = useState([]);\r\n  const [chatWithFriend, setChatWithFriend] = useState();\r\n  const [yourID, setyourID] = useState();\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState({\r\n    body: \"\",\r\n    id: \"\",\r\n    sentBy: \"\",\r\n  });\r\n  const [sock, setSock] = useState();\r\n  const [messagesFromRoom, setMessagesFromRoom] = useState([]);\r\n  const [friendRequest, setFriendRequest] = useState();\r\n\r\n  useEffect(() => {\r\n    if (room) {\r\n      getMessages(room);\r\n    }\r\n  }, []);\r\n\r\n  function getMessages(room) {\r\n    const roomName = {\r\n      room: room,\r\n    };\r\n    if (room) {\r\n      axios\r\n        .post(\"/roomChats\", { roomName })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setMessagesFromRoom(response.data.messages);\r\n          } else {\r\n            setMessagesFromRoom([]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRequests();\r\n  }, []);\r\n\r\n  const getRequests = () => {\r\n    axios\r\n      .get(\"/myRequests\")\r\n      .then((response) => {\r\n        const data = response.data.recievedRequests;\r\n        setRequestsPending([...data]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFriends();\r\n  }, []);\r\n\r\n  const getFriends = () => {\r\n    axios\r\n      .get(\"/myFriends\")\r\n      .then((response) => {\r\n        const data = response.data.friends;\r\n        setFriends([...data]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  function handleShowModal() {\r\n    setShowModal(true);\r\n  }\r\n\r\n  function handleHideModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  function handleHideModalAfterRequest() {\r\n    setShowAfterRequest(false);\r\n  }\r\n\r\n  function handleChangeUsernameContact(event) {\r\n    setUsernameContact(event.target.value);\r\n  }\r\n\r\n  function handleSubmitModal(event) {\r\n    event.preventDefault();\r\n    handleHideModal();\r\n    if (friends.find((friend) => friend === usernameContact)) {\r\n      console.log(\"contact already exists\");\r\n    } else {\r\n      const userContact = {\r\n        usernameContact: usernameContact,\r\n      };\r\n      axios\r\n        .post(\"/sendFriendRequest\", { userContact })\r\n        .then((response) => {\r\n          if (response.data.requestError) {\r\n            setFriendRequest(response.data.requestError);\r\n            setShowAfterRequest(true);\r\n          }\r\n          if (response.data.requestSuccess) {\r\n            setFriendRequest(response.data.requestSuccess);\r\n            setShowAfterRequest(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  function whichFriendToChat(friend) {\r\n    setChatWithFriend(friend);\r\n  }\r\n\r\n  function openChat(friend) {\r\n    setMessagesFromRoom([]);\r\n    if (sock) {\r\n      sock.emit(\"forceDisconnect\");\r\n    }\r\n    let roomData = props.currentUser + \"--with--\" + friend;\r\n    let split = roomData.split(\"--with--\"); // ['username2', 'username1']\r\n\r\n    let unique = [...new Set(split)].sort((a, b) => (a < b ? -1 : 1)); // ['username1', 'username2']\r\n\r\n    let updatedRoomName = `${unique[0]}--with--${unique[1]}`; // 'username1--with--username2'\r\n\r\n    const roomName = {\r\n      room: updatedRoomName,\r\n    };\r\n    axios\r\n      .post(\"/roomChats\", { roomName })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setMessagesFromRoom(response.data.messages);\r\n        } else {\r\n          setMessagesFromRoom([]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    whichFriendToChat(friend);\r\n    const socket = socketIOClient(ENDPOINT);\r\n    setSock(socket);\r\n    socket.emit(\"join\", `${friend}--with--${props.currentUser}`);\r\n    socket.on(\"your room\", (room) => {\r\n      getMessages(room);\r\n      setRoom(room);\r\n    });\r\n    socket.on(\"your id\", (id) => {\r\n      setyourID(id);\r\n    });\r\n    socket.on(\"onMessage\", (msg) => {\r\n      setMessagesFromRoom((prevMessages) => {\r\n        return [...prevMessages, msg];\r\n      });\r\n    });\r\n  }\r\n\r\n  function sendMessage(event) {\r\n    event.preventDefault();\r\n    const messageObject = {\r\n      body: message,\r\n      room: room,\r\n    };\r\n    const roomID = {\r\n      roomName: room,\r\n    };\r\n    setMessagesFromRoom((prevMessages) => {\r\n      return [...prevMessages, message];\r\n    });\r\n    axios\r\n      .post(\"/roomChat\", { message, roomID })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setMessage({\r\n      body: \"\",\r\n      id: yourID,\r\n      sentBy: \"\",\r\n    });\r\n    sock.emit(\"emitMessage\", messageObject);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setMessage({\r\n      body: event.target.value,\r\n      id: yourID,\r\n      sentBy: props.currentUser,\r\n    });\r\n  }\r\n\r\n  function handleChatWithFriendValue() {\r\n    setChatWithFriend();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid laptopSize\">\r\n        <div className=\"row\" id=\"privateChatContainer\">\r\n          <div className=\"sideBoxPrivateChat\">\r\n            <div className=\"privateChatExtraFlex\">\r\n              <div className=\"privateChatFriends\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-9\">\r\n                    <h3 className=\"privateChatFriendListHeading\">\r\n                      Friend list\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"col-lg-3\">\r\n                    <button\r\n                      onClick={handleShowModal}\r\n                      className=\"addNewContactButton\"\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"pp\">\r\n                  {friends.length !== 0 ? (\r\n                    friends.map((friend, index) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            openChat(friend);\r\n                          }}\r\n                          className=\"privateChatFriendContainer\"\r\n                          key={index}\r\n                        >\r\n                          <p className=\"privateChatFriendName\">{friend}</p>\r\n                          <hr className=\"privateChatFriendNameHR\" />\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"noRequestsPending\">No Friends right now</p>\r\n                      <hr />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"privateChatFriendRequestsFlexBox\">\r\n                <h3 className=\"privateChatPendingRequestsHeading\">\r\n                  Friend Requests\r\n                </h3>\r\n                <div className=\"privateChatRequestsPendingContainer\">\r\n                  {requestsPending.length !== 0 ? (\r\n                    requestsPending.map((request, index) => {\r\n                      return <MyRequests request={request} key={index} />;\r\n                    })\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"noRequestsPending\">\r\n                        No Friend Requests right now\r\n                      </p>\r\n                      <hr />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Modal\r\n                id=\"modalFriendRequest\"\r\n                show={showModal}\r\n                onHide={handleHideModal}\r\n              >\r\n                <Modal.Body id=\"modalBodyRequest\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-10 col-sm-10 col-10\">\r\n                      <h1 className=\"modalFriendRequest\">\r\n                        Send Friend Request\r\n                      </h1>\r\n                    </div>\r\n                    <div className=\"col-lg-2 col-sm-2 col-2\">\r\n                      <ClearIcon\r\n                        id=\"modalFriendRequestCloseButton\"\r\n                        onClick={handleHideModal}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <form onSubmit={handleSubmitModal}>\r\n                    <div className=\"form-group\">\r\n                      <label\r\n                        className=\"modalFriendRequestLabel\"\r\n                        htmlFor=\"username\"\r\n                      >\r\n                        Friend's Username\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"modalFriendRequestInput globalChatTextarea\"\r\n                        name=\"username\"\r\n                        onChange={handleChangeUsernameContact}\r\n                        size=\"25\"\r\n                        required\r\n                      ></input>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"modalFriendRequestButton globalChatSendButton\"\r\n                    >\r\n                      <p className=\"globalChatSendButtonText\">Send Request </p>\r\n                    </button>\r\n                  </form>\r\n                </Modal.Body>\r\n              </Modal>\r\n              <Modal\r\n                id=\"modalFriendRequestAfter\"\r\n                show={showAfterRequest}\r\n                onHide={handleHideModalAfterRequest}\r\n              >\r\n                <Modal.Body>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-10 col-sm-10 col-10\">\r\n                      <p className=\"modalFriendRequestSent\">{friendRequest}</p>\r\n                    </div>\r\n                    <div className=\"col-lg-2 col-sm-2 col-2\">\r\n                      <ClearIcon\r\n                        id=\"modalFriendRequestCloseButton\"\r\n                        onClick={handleHideModalAfterRequest}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Body>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n          <div className=\"privateMainChat\">\r\n            <div className=\"globalChatExtra\">\r\n              {chatWithFriend ? (\r\n                <div\r\n                  className=\"globalMainChatHeading\"\r\n                  style={{ marginBottom: \"0rem\" }}\r\n                >\r\n                  <p className=\"globalMainChatHeadingLine\">{chatWithFriend}</p>\r\n                </div>\r\n              ) : null}\r\n              <div className=\"globalChatMessages\">\r\n                {messagesFromRoom\r\n                  ? messagesFromRoom.map((message, index) => {\r\n                      return (\r\n                        <OpenConversation\r\n                          key={index}\r\n                          message={message}\r\n                          id={yourID}\r\n                          friend={chatWithFriend}\r\n                        />\r\n                      );\r\n                    })\r\n                  : null}\r\n              </div>\r\n              {chatWithFriend ? (\r\n                <div className=\"globalChatSendMesage\">\r\n                  <form onSubmit={sendMessage}>\r\n                    <div className=\"globalChatButtonFlex\">\r\n                      <div className=\"globalChatTextareaContainer\">\r\n                        <input\r\n                          value={message.body}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Type a Message\"\r\n                          className=\"globalChatTextarea\"\r\n                          size=\"56\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"globalChatSendButtonContainer\">\r\n                        <button className=\"globalChatSendButton\">\r\n                          <p className=\"globalChatSendButtonText\">\r\n                            Send\r\n                            <SendRoundedIcon style={{ marginLeft: \"6px\" }} />\r\n                          </p>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* For Mobile */}\r\n\r\n      <div className=\"phoneSize\">\r\n        {!chatWithFriend ? (\r\n          <div className=\"phonePrivateListContainer\">\r\n            <div className=\"phonePrivateChatFriends\">\r\n              <div className=\"\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-9 col-sm-10 col-10\">\r\n                    <h3 className=\"phonePrivateChatFriendListHeading\">\r\n                      Friend list\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"col-lg-3 col-sm-2 col-2\">\r\n                    <AddIcon\r\n                      onClick={handleShowModal}\r\n                      id=\"phoneAddNewContactButton\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"phonep\">\r\n                {friends.length !== 0 ? (\r\n                  friends.map((friend, index) => {\r\n                    return (\r\n                      <div\r\n                        onClick={() => {\r\n                          openChat(friend);\r\n                        }}\r\n                        className=\"phonePrivateChatFriendContainer\"\r\n                        key={index}\r\n                      >\r\n                        <p className=\"phonePrivateChatFriendName\">{friend}</p>\r\n                        <hr className=\"phonePrivateChatFriendNameHR\" />\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <>\r\n                    <p className=\"phoneNoRequestsPending\">\r\n                      No Friends right now\r\n                    </p>\r\n                    <hr />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"phonePrivateChatFriends\">\r\n              <h3 className=\"phonePrivateChatPendingRequestsHeading\">\r\n                Friend Requests\r\n              </h3>\r\n              <div className=\"phonePrivateChatRequestsPendingContainer\">\r\n                {requestsPending.length !== 0 ? (\r\n                  requestsPending.map((request, index) => {\r\n                    return <MyRequests request={request} key={index} />;\r\n                  })\r\n                ) : (\r\n                  <>\r\n                    <p className=\"phoneNoRequestsPending\">\r\n                      No Friend Requests right now\r\n                    </p>\r\n                    <hr />\r\n                  </>\r\n                )}\r\n              </div>\r\n              {/* <div>\r\n                <Modal\r\n                  id=\"modalFriendRequest\"\r\n                  show={showModal}\r\n                  onHide={handleHideModal}\r\n                >\r\n                  <Modal.Body id=\"modalBodyRequest\">\r\n                    <div>\r\n                      <h1 className=\"modalFriendRequest\">\r\n                        Send Friend Request\r\n                      </h1>\r\n                      <ClearIcon\r\n                        id=\"modalFriendRequestCloseButton\"\r\n                        onClick={handleHideModal}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </div>\r\n                    <form onSubmit={handleSubmitModal}>\r\n                      <div className=\"form-group\">\r\n                        <label\r\n                          className=\"modalFriendRequestLabel\"\r\n                          htmlFor=\"username\"\r\n                        >\r\n                          Enter Friend's Username\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"modalFriendRequestInput globalChatTextarea\"\r\n                          name=\"username\"\r\n                          onChange={handleChangeUsernameContact}\r\n                          size=\"25\"\r\n                          required\r\n                        ></input>\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"modalFriendRequestButton globalChatSendButton\"\r\n                      >\r\n                        <p className=\"globalChatSendButtonText\">\r\n                          Send Request{\" \"}\r\n                        </p>\r\n                      </button>\r\n                    </form>\r\n                  </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                  id=\"modalFriendRequestAfter\"\r\n                  show={showAfterRequest}\r\n                  onHide={handleHideModalAfterRequest}\r\n                >\r\n                  <Modal.Body>\r\n                    <div>\r\n                      <p className=\"modalFriendRequestSent\">{friendRequest}</p>\r\n                      <ClearIcon\r\n                        id=\"modalFriendRequestCloseButton\"\r\n                        onClick={handleHideModalAfterRequest}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </div>\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"privateMainChat phoneChatGlobal\">\r\n            <div className=\"globalMainChatHeading\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-9 col-9\">\r\n                  <p className=\"phonePrivateMainChatHeadingLine\">\r\n                    {chatWithFriend}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-sm-3 col-3\">\r\n                  <ArrowBackIosIcon\r\n                    id=\"privatebackButton\"\r\n                    onClick={handleChatWithFriendValue}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"phoneGlobalChatExtra\">\r\n              <div className=\"phoneGlobalChatMessages\">\r\n                {messagesFromRoom\r\n                  ? messagesFromRoom.map((message, index) => {\r\n                      return (\r\n                        <OpenConversation\r\n                          key={index}\r\n                          message={message}\r\n                          id={yourID}\r\n                          friend={chatWithFriend}\r\n                        />\r\n                      );\r\n                    })\r\n                  : null}\r\n              </div>\r\n              <div className=\"phoneGlobalChatSendMesage\">\r\n                <form onSubmit={sendMessage}>\r\n                  <div className=\"phoneGlobalChatButtonFlex\">\r\n                    <div className=\"phoneGlobalChatTextareaContainer\">\r\n                      <input\r\n                        value={message.body}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Type a Message\"\r\n                        className=\"phoneGlobalChatTextarea\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"phoneGlobalChatSendButtonContainer\">\r\n                      <button className=\"globalChatSendButton\">\r\n                        <p className=\"globalChatSendButtonText\">\r\n                          <SendRoundedIcon\r\n                            style={{\r\n                              fontSize: \"2rem\",\r\n                            }}\r\n                          />\r\n                        </p>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivateChat;\r\n","import { React, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport GlobalChat from \"./GlobalChat\";\r\nimport PrivateChat from \"./PrivateChat\";\r\n\r\nfunction Chatroom(props) {\r\n  const [activeKey, setActiveKey] = useState(\"Global\");\r\n  const [show, setShow] = useState(true);\r\n\r\n  function handleLogoutClick() {\r\n    axios.get(\"/logout\");\r\n    setTimeout(function () {\r\n      window.location.reload();\r\n    }, 400);\r\n  }\r\n\r\n  function handleShow(socket) {\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <div id=\"chatRoomBody\">\r\n      <Tab.Container\r\n        id=\"controlled-tab-example\"\r\n        activeKey={activeKey}\r\n        onSelect={setActiveKey}\r\n      >\r\n        <Nav\r\n          variant=\"tabs\"\r\n          style={{\r\n            borderBottom: \"1px solid black\",\r\n            backgroundColor: \"#556052\",\r\n          }}\r\n        >\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              style={\r\n                activeKey === \"Global\"\r\n                  ? {\r\n                      fontSize: \"1.3rem\",\r\n                      border: \"1px solid black\",\r\n                      borderBottom: \"0\",\r\n                      backgroundColor: \"#f8f8f8\",\r\n                    }\r\n                  : {\r\n                      fontSize: \"1.3rem\",\r\n                      border: \"0\",\r\n                      color: \"white\",\r\n                    }\r\n              }\r\n              eventKey=\"Global\"\r\n            >\r\n              Global\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n              className=\"privateNavbar\"\r\n              eventKey=\"Private\"\r\n              style={\r\n                activeKey === \"Private\"\r\n                  ? {\r\n                      fontSize: \"1.3rem\",\r\n                      border: \"1px solid black\",\r\n                      borderBottom: \"0\",\r\n                      backgroundColor: \"#f8f8f8\",\r\n                    }\r\n                  : {\r\n                      fontSize: \"1.3rem\",\r\n                      border: \"0\",\r\n                      color: \"white\",\r\n                    }\r\n              }\r\n            >\r\n              Private\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item className=\"ml-auto\">\r\n            <Nav.Link\r\n              to=\"/logout\"\r\n              onClick={handleLogoutClick}\r\n              className=\"justify-content-end logoutButton\"\r\n              style={{\r\n                fontSize: \"1.2rem\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              Logout\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        <Tab.Content>\r\n          <Tab.Pane eventKey=\"Global\">\r\n            <GlobalChat\r\n              handleShow={handleShow}\r\n              show={show}\r\n              currentUser={props.currentUser}\r\n            />\r\n          </Tab.Pane>\r\n          <Tab.Pane eventKey=\"Private\">\r\n            <PrivateChat currentUser={props.currentUser} />\r\n          </Tab.Pane>\r\n        </Tab.Content>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatroom;\r\n","import React from \"react\";\r\n\r\nexport default function Error404() {\r\n  return <div>page cannot be found</div>;\r\n}\r\n","import { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { React, useState, Fragment } from \"react\";\nimport Login from \"./Registration/Login\";\nimport Logout from \"./Registration/Logout\";\nimport Register from \"./Registration/Register\";\nimport Home from \"./Registration/Home\";\nimport Chatroom from \"./Chatroom\";\nimport Error404 from \"./Registration/Error404\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [auth, setAuth] = useState(false);\n  const [currentUser, setCurrentUser] = useState();\n  // to check if user is verified or not\n\n  if (window.location.pathname === \"/\") {\n    axios.get(\"/home\").then((response) => {\n      if (response.data.authorizedMessage) {\n        if (auth === false) {\n          setAuth(true);\n        }\n      }\n      if (response.data.unauthorizedMessage) {\n        if (auth === true) {\n          setAuth(false);\n        }\n      }\n    });\n  }\n\n  if (window.location.pathname === \"/chatroom\") {\n    axios.get(\"/chatroom\").then((response) => {\n      if (response.data.authorizedMessage) {\n        if (auth === false) {\n          setAuth(true);\n          // console.log(response.data.username);\n          setCurrentUser(response.data.username);\n        }\n      }\n      if (response.data.unauthorizedMessage) {\n        if (auth === true) {\n          setAuth(false);\n        }\n      }\n    });\n  }\n\n  if (window.location.pathname === \"/login\") {\n    axios.get(\"/login\").then((response) => {\n      if (response.data.authorizedMessage) {\n        if (auth === false) {\n          setAuth(true);\n        }\n      }\n      if (response.data.unauthorizedMessage) {\n        if (auth === true) {\n          setAuth(false);\n        }\n      }\n    });\n  }\n\n  if (window.location.pathname === \"/register\") {\n    axios.get(\"/register\").then((response) => {\n      if (response.data.authorizedMessage) {\n        setAuth(true);\n      }\n      if (response.data.unauthorizedMessage) {\n        setAuth(false);\n      }\n    });\n  }\n\n  function getResponseFromRegister(response) {\n    response === \"User is verified\" ? setAuth(true) : setAuth(false);\n  }\n\n  function getResponseFromLogin(response) {\n    response === \"User is verified\" ? setAuth(true) : setAuth(false);\n  }\n\n  function currentWorkingUser(user) {\n    // console.log(user);\n    // setCurrentUser(user);\n  }\n\n  return (\n    <Fragment>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            {auth ? <Redirect to=\"/chatroom\" /> : <Home />}\n          </Route>\n          <Route path=\"/register\">\n            {auth ? (\n              <Redirect to=\"/chatroom\" />\n            ) : (\n              <Register getResponseFromRegister={getResponseFromRegister} />\n            )}\n          </Route>\n          <Route path=\"/login\">\n            {auth ? (\n              <Redirect to=\"/chatroom\" />\n            ) : (\n              <Login\n                getResponseFromLogin={getResponseFromLogin}\n                currentWorkingUser={currentWorkingUser}\n              />\n            )}\n          </Route>\n          <Route path=\"/logout\">\n            <Logout />\n          </Route>\n          <Route path=\"/chatroom\">\n            {!auth ? (\n              <Redirect to=\"/login\" />\n            ) : (\n              <Chatroom currentUser={currentUser} />\n            )}\n          </Route>\n          <Route path=\"/*\">\n            <Error404 />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}